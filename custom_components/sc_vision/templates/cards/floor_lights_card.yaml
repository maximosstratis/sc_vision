floor_lights_card:
  type: custom:button-card
  template:
    - dashboard_base_card
  icon: mdi:lightbulb
  variables:
    x_lights_count: |
      [[[
        let floor = Object.values(hass.floors).find(f => f.floor_id === variables.floor_id );
        let areas = Object.values(hass.areas).filter(a => a.floor_id === variables.floor_id).map(a => a.area_id);
        let entities = Object.values(hass.entities).filter(e => areas.includes(e.area_id)).map(e => e.entity_id).filter(e => e.startsWith('light.'));
        let entity_states = entities.map(e => hass.states[e].state);
        let lights_on = entity_states.filter(es => es === "on").length
        return lights_on;
      ]]]
    y_active: |
      [[[
        return variables.x_lights_count > 0;
      ]]]
  state_display: |
    [[[
      return `${variables.lights_on}`;
    ]]]
  tap_action:
    action: call-service
    service: |
      [[[
        return variables.y_active ? "light.turn_off" : "light.turn_on";
      ]]]
    data:
      floor_id: "[[[return variables.floor_id]]]"
  triggers_update: all
